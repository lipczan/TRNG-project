%% INPUT
clear();

% 1th sample 
% audio info
info = audioinfo('samples/ojcze_nasz.wav')
% to double
[y,Fsy] = audioread('samples/ojcze_nasz.wav');

% to int16
[z,Fsz] = audioread('samples/ojcze_nasz.wav','native');

%% SIGNAL
figure('Renderer', 'painters', 'Position', [10 10 900 600]);

y = y(:, 1);
y = transpose(y);
N=length(y);
t=(0:N-1)/Fsy;

% % signal plot
subplot(4,1,1)
plot(t,y)
xlabel('Time')
ylabel('Audio Signal')

% normalized before
subplot(4,1,2)
histogram(y,'Normalization','probability');
subplot(4,1,3)
histogram(z,'Normalization','probability');

%% POSTPROCESING
x0=0.001;
r=4;
P=2^16;

rozmiar = size(y); 
B = rozmiar(2);

N=B-1;
% zmiana parametr?w mapy chaotycznej w zale?no?ci od pliku audio

x(1)=x0;
for n=1:N
    x(n+1)=r.*x(n).*(1-x(n));
end

%x - chaotic map
%y - samples

K=1000;
z=bitxor(floor(x.*P), floor(P*abs(y)))/P;

s = z>0.5; % najprostsza binaryzacja 
for i=1:(N/8) %konwersja bitow na liczby 8 bitowe
    a = (8*i)-7;
    b = 8*i;
    numb(i) = bi2de(s(a:b));
end

% normalized after
subplot(4,1,4)
% histogram(numb,256);
histogram(numb,'Normalization','probability')
